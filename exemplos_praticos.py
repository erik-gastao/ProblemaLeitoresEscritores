"""
Exemplos pr√°ticos de uso do sistema Leitores-Escritores
Este arquivo demonstra como usar todos os componentes do sistema
"""
import os
import subprocess
import sys
import time

def exemplo_interface_grafica():
    """Exemplo de uso da interface gr√°fica"""
    print("=" * 60)
    print("EXEMPLO: INTERFACE GR√ÅFICA")
    print("=" * 60)
    
    print("""
A interface gr√°fica oferece:

1. CONFIGURA√á√ÉO:
   - Ajuste quantos leitores (1-10)
   - Ajuste quantos escritores (1-10)
   
2. CONTROLES:
   - Iniciar: Come√ßa a simula√ß√£o
   - Pausar/Continuar: Para an√°lise detalhada
   - Parar: Encerra completamente
   - Limpar Log: Remove hist√≥rico
   
3. VISUALIZA√á√ÉO:
   - Valor atual dos dados
   - Leitores ativos em tempo real
   - Log com timestamp preciso
   - Estat√≠sticas de desempenho
   
Para executar:
   python leitores_escritores_gui.py
   
DICA: Use 5 leitores e 2 escritores para ver comportamento interessante!
""")

def exemplo_testes_unitarios():
    """Exemplo dos testes unit√°rios"""
    print("=" * 60)
    print("EXEMPLO: TESTES UNIT√ÅRIOS")
    print("=" * 60)
    
    print("""
Os testes verificam:

‚úÖ FUNCIONAMENTO B√ÅSICO:
   - Leitura simples funciona
   - Escrita simples funciona
   
‚úÖ CONCORR√äNCIA:
   - M√∫ltiplos leitores simult√¢neos
   - Escritores se excluem mutuamente
   
‚úÖ SINCRONIZA√á√ÉO:
   - Leitores bloqueiam escritores
   - Escritores bloqueiam leitores
   
‚úÖ CONSIST√äNCIA:
   - Dados permanecem √≠ntegros
   - Sem condi√ß√µes de corrida
   
Para executar:
   python test_leitores_escritores.py
   
Todos os 7 testes devem passar para implementa√ß√£o correta!
""")

def exemplo_demonstracoes():
    """Exemplo das demonstra√ß√µes interativas"""
    print("=" * 60)
    print("EXEMPLO: DEMONSTRA√á√ïES INTERATIVAS")
    print("=" * 60)
    
    print("""
5 cen√°rios educacionais:

1. M√öLTIPLOS LEITORES:
   - 4 leitores lendo simultaneamente
   - Mostra que leitores n√£o se bloqueiam
   
2. EXCLUS√ÉO DE ESCRITORES:
   - 3 escritores competindo
   - Prova que apenas 1 escreve por vez
   
3. LEITORES vs ESCRITORES:
   - Cen√°rio misto realista
   - Demonstra coordena√ß√£o completa
   
4. TESTE DE STARVATION:
   - 5 leitores vs 1 escritor
   - Identifica poss√≠vel inani√ß√£o
   
5. AN√ÅLISE TEMPORAL:
   - Controle preciso de tempos
   - An√°lise de esperas e execu√ß√µes
   
Para executar:
   python demonstracao_cenarios.py
   
Escolha o cen√°rio no menu interativo!
""")

def exemplo_analise_resultados():
    """Como analisar os resultados"""
    print("=" * 60)
    print("EXEMPLO: COMO ANALISAR RESULTADOS")
    print("=" * 60)
    
    print("""
üîç O QUE OBSERVAR:

COMPORTAMENTO CORRETO:
‚úÖ M√∫ltiplos leitores ativos simultaneamente (ex: "Leitores: 3")
‚úÖ Apenas 1 escritor por vez (nunca "Escritores simult√¢neos")
‚úÖ Altern√¢ncia fluida entre leituras e escritas
‚úÖ Dados incrementando consistentemente (0‚Üí1‚Üí2‚Üí3...)

PROBLEMAS POTENCIAIS:
‚ùå Dois escritores executando juntos (BUG GRAVE!)
‚ùå Leitor e escritor simult√¢neos (CONDI√á√ÉO DE CORRIDA!)
‚ùå Dados inconsistentes (ex: pular n√∫meros)
‚ùå Escritor nunca executa (STARVATION)

M√âTRICAS IMPORTANTES:
üìä Taxa de Leituras/Escritas
üìä Tempo m√©dio de espera
üìä M√°ximo de leitores simult√¢neos
üìä Utiliza√ß√£o do recurso compartilhado

EXEMPLO DE LOG CORRETO:
[10:30:15.123] üìò Leitor 0 est√° lendo valor: 5
[10:30:15.125] üìò Leitor 1 est√° lendo valor: 5  ‚Üê SIMULT√ÇNEO OK!
[10:30:15.127] üìò Leitor 2 est√° lendo valor: 5  ‚Üê SIMULT√ÇNEO OK!
[10:30:16.200] ‚úçÔ∏è Escritor 0 escreveu valor: 6   ‚Üê AP√ìS LEITORES
[10:30:17.100] üìò Leitor 3 est√° lendo valor: 6  ‚Üê AP√ìS ESCRITOR
""")

def exemplo_configuracao_personalizada():
    """Como criar configura√ß√µes personalizadas"""
    print("=" * 60)
    print("EXEMPLO: CONFIGURA√á√ïES PERSONALIZADAS")
    print("=" * 60)
    
    print("""
üîß CONFIGURA√á√ïES DISPON√çVEIS:

CEN√ÅRIO PADR√ÉO:
- 3 leitores, 2 escritores
- Tempos moderados
- Boa para demonstra√ß√£o inicial

TESTE DE STARVATION:
- 8 leitores, 1 escritor
- Leitores r√°pidos, escritor lento
- Pode causar inani√ß√£o do escritor

ALTA CONCORR√äNCIA:
- 10 leitores, 5 escritores
- Tempos muito r√°pidos
- Testa limites do sistema

STRESS TEST:
- 15 leitores, 8 escritores
- M√°xima concorr√™ncia
- Identifica gargalos

Para usar configura√ß√µes:
   from configuracoes import get_config
   
   config = get_config('stress')
   # Use config['num_leitores'], etc.
   
Para listar todas:
   python configuracoes.py
""")

def exemplo_casos_de_uso_reais():
    """Casos de uso do mundo real"""
    print("=" * 60)
    print("EXEMPLO: CASOS DE USO REAIS")
    print("=" * 60)
    
    print("""
üåç APLICA√á√ïES PR√ÅTICAS:

1. BANCO DE DADOS:
   Leitores: Consultas SELECT
   Escritores: INSERT/UPDATE/DELETE
   ‚Üí M√∫ltiplas consultas simult√¢neas OK
   ‚Üí Modifica√ß√µes precisam exclusividade

2. CACHE DE SISTEMA:
   Leitores: Aplica√ß√µes lendo cache
   Escritores: Sistema atualizando cache
   ‚Üí Leituras r√°pidas e simult√¢neas
   ‚Üí Atualiza√ß√µes at√¥micas

3. ARQUIVO DE CONFIGURA√á√ÉO:
   Leitores: Servi√ßos lendo configura√ß√£o
   Escritores: Admin alterando configura√ß√£o
   ‚Üí Servi√ßos n√£o se bloqueiam
   ‚Üí Altera√ß√µes s√£o consistentes

4. SISTEMA DE INVENT√ÅRIO:
   Leitores: Consultas de estoque
   Escritores: Vendas/Compras
   ‚Üí Consultas simult√¢neas
   ‚Üí Transa√ß√µes exclusivas

5. ESTRUTURA DE DADOS COMPARTILHADA:
   Leitores: Threads lendo estrutura
   Escritores: Threads modificando
   ‚Üí M√∫ltiplas leituras seguras
   ‚Üí Modifica√ß√µes at√¥micas

VANTAGENS DA IMPLEMENTA√á√ÉO:
‚úÖ Performance: Leitores n√£o se bloqueiam
‚úÖ Corre√ß√£o: Escritas s√£o at√¥micas
‚úÖ Escalabilidade: Suporta muitos leitores
""")

def executar_exemplo_completo():
    """Executa um exemplo completo do sistema"""
    print("=" * 60)
    print("EXEMPLO COMPLETO - EXECU√á√ÉO GUIADA")
    print("=" * 60)
    
    print("Este exemplo vai mostrar todos os componentes em a√ß√£o:")
    
    # 1. Executar testes
    print("\n1. Executando testes para verificar corre√ß√£o...")
    try:
        resultado = subprocess.run([sys.executable, "test_leitores_escritores.py"], 
                                 capture_output=True, text=True, timeout=30)
        if resultado.returncode == 0:
            print("‚úÖ Testes OK - Implementa√ß√£o correta!")
        else:
            print("‚ùå Falha nos testes!")
            return
    except Exception as e:
        print(f"Erro: {e}")
        return
    
    # 2. Mostrar configura√ß√µes
    print("\n2. Configura√ß√µes dispon√≠veis:")
    from configuracoes import CONFIGURACOES
    for nome, config in CONFIGURACOES.items():
        print(f"   {nome}: {config['num_leitores']}L/{config['num_escritores']}E")
    
    # 3. Instru√ß√µes para interface
    print("\n3. Pr√≥ximos passos recomendados:")
    print("   a) Execute a interface gr√°fica:")
    print("      python leitores_escritores_gui.py")
    print("   b) Configure: 5 leitores, 2 escritores")
    print("   c) Clique 'Iniciar' e observe o comportamento")
    print("   d) Teste 'Pausar' para an√°lise detalhada")
    
    print("\n4. Para an√°lise avan√ßada:")
    print("   python demonstracao_cenarios.py")
    print("   ‚Üí Escolha 'Teste de starvation' (op√ß√£o 4)")
    
    print(f"\n{'='*60}")
    print("SISTEMA PRONTO PARA USO!")
    print("Escolha uma op√ß√£o acima para come√ßar.")
    print(f"{'='*60}")

def menu_exemplos():
    """Menu interativo dos exemplos"""
    exemplos = {
        '1': ("Interface Gr√°fica", exemplo_interface_grafica),
        '2': ("Testes Unit√°rios", exemplo_testes_unitarios),
        '3': ("Demonstra√ß√µes", exemplo_demonstracoes),
        '4': ("An√°lise de Resultados", exemplo_analise_resultados),
        '5': ("Configura√ß√µes", exemplo_configuracao_personalizada),
        '6': ("Casos de Uso Reais", exemplo_casos_de_uso_reais),
        '7': ("Exemplo Completo", executar_exemplo_completo)
    }
    
    while True:
        print("\n" + "="*60)
        print("EXEMPLOS PR√ÅTICOS - LEITORES-ESCRITORES")
        print("="*60)
        print("Escolha um exemplo para ver:")
        
        for key, (titulo, _) in exemplos.items():
            print(f"{key}. {titulo}")
        
        print("0. Sair")
        
        try:
            escolha = input("\nEscolha (0-7): ").strip()
            
            if escolha == '0':
                print("Saindo dos exemplos...")
                break
            
            if escolha in exemplos:
                titulo, funcao = exemplos[escolha]
                print(f"\nüìñ Carregando: {titulo}")
                funcao()
                input("\nPressione ENTER para continuar...")
            else:
                print("Op√ß√£o inv√°lida!")
                
        except KeyboardInterrupt:
            print("\n\nInterrompido pelo usu√°rio.")
            break

if __name__ == "__main__":
    menu_exemplos()